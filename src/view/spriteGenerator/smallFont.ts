const pad = function (paddingLeft: number, arr: number[], paddingRight: number = 0): number[] {
	return [...new Array(paddingLeft).fill(0b00000000), ...arr, ...new Array(paddingRight).fill(0b00000000)];
};

const same = function (byte: number, times: number): number[] {
	return new Array(times).fill(byte);
};

const mirr = function (toBeMirrored: number[], middle: number[] = []): number[] {
	return [...toBeMirrored, ...middle, ...toBeMirrored.slice().reverse()];
};

const a = pad(2, [0b00001111, 0b00010001, ...same(0b00010001, 2), 0b00010011, 0b0001110], 2);
const b = pad(0, [0b00010000, 0b00010000, 0b00010110, 0b00011001, 0b00010001, 0b00010001, 0b00010001, 0b00011110], 2);
const c = pad(2, mirr([0b00001110, 0b00010001], same(0b0001000, 2)), 2);
const d = pad(0, [0b00000001, 0b00000001, 0b00001111, ...same(0b00010001, 3), 0b00010011, 0b00001101], 2);
const e = pad(2, [0b00001110, 0b00010001, 0b00011111, 0b00010000, 0b00010001, 0b00001110], 2);
const f = pad(0, [0b00000110, 0b00001000, 0b00011110, ...same(0b00001000, 5)], 2);
const g = pad(2, [0b00001111, ...same(0b00010001, 3), 0b00010011, 0b00001101, 0b00000001, 0b00001110]);
const h = pad(0, [...same(0b00010000, 2), 0b00010110, 0b00011001, ...same(0b00010001, 4)], 2);
const i = pad(0, [0b00000100, 0b00000000, 0b00001100, ...same(0b00000100, 4), 0b00000110], 2);
const j = pad(0, [0b00000010, 0b00000000, 0b00001110, ...same(0b00000010, 5), 0b00011100], 1);
const k = pad(0, [...same(0b00010000, 2), 0b00010010, 0b00010100, 0b00011000, 0b00010100, 0b00010010, 0b00010001], 2);
const l = pad(0, [...same(0b00000100, 7), 0b00000110], 2);
const m = pad(2, [0b00011010, ...same(0b00010101, 5)], 2);
const n = pad(2, [0b00010110, 0b00011001, ...same(0b00010001, 4)], 2);
const o = pad(2, mirr([0b00001110], same(0b00010001, 4)), 2);
const p = pad(2, [0b00010110, 0b00011001, ...same(0b00010001, 3), 0b00011110, ...same(0b00010000, 2)]);
const q = pad(2, [0b00001111, ...same(0b00010001, 3), 0b00010011, 0b00001101, ...same(0b00000001, 2)]);
const r = pad(2, [0b00011011, 0b00001100, ...same(0b00001000, 3), 0b00011100], 2);
const s = pad(2, [0b00001110, 0b00010001, 0b00001100, 0b00000010, 0b00010001, 0b00001110], 2);
const t = pad(0, [...same(0b00001000, 2), 0b00011110, ...same(0b00001000, 3), 0b00001001, 0b00000110], 2);
const u = pad(2, [...same(0b00010001, 4), 0b00010011, 0b00001101], 2);
const v = pad(2, [...same(0b00010001, 2), ...same(0b00001010, 2), ...same(0b00000100, 2)], 2);
const w = pad(2, [...same(0b00010001, 2), ...same(0b00010101, 2), ...same(0b00001010, 2)], 2);
const x = pad(2, mirr([0b00010001, 0b00001010, 0b00000100]), 2);
const y = pad(2, [...same(0b00010001, 2), ...same(0b00001010, 2), ...same(0b00000100, 2), 0b00001000, 0b00010000]);
const z = pad(2, [0b00011111, 0b00000010, 0b00000100, 0b00001000, 0b00010000, 0b00111111], 2);

const A = pad(0, [...same(0b00000100, 3), ...same(0b00001010, 2), 0b00011111, ...same(0b00010001, 2)], 2);
const B = pad(0, mirr([0b00011110, ...same(0b00010001, 2)], [0b00011110, 0b00010001]), 2);
const C = pad(0, mirr([0b00001110, 0b00010001], same(0b00010000, 4)), 2);
const D = pad(0, mirr([0b00011100, 0b00010010], same(0b00010001, 4)), 2);
const E = pad(0, mirr([0b00011111, ...same(0b00010000, 2)], [0b00011110, 0b00010000]), 2);
const F = pad(0, [0b00011111, ...same(0b00010000, 2), 0b00011110, ...same(0b00010000, 4)], 2);
const G = pad(0, mirr([0b00001110, 0b00010001], [...same(0b00010000, 2), 0b00010011, 0b00010001]), 2);
const H = pad(0, mirr(same(0b00010001, 3), [0b00011111, 0b00010001]), 2);
const I = pad(0, mirr([0b00001110], same(0b00000100, 6)), 2);
const J = pad(0, [0b00001111, ...same(0b00000001, 4), ...same(0b00010001, 2), 0b00001110], 2);
const K = pad(0, mirr([0b00010001, 0b00010010, 0b00010100, 0b00011000]), 2);
const L = pad(0, [...same(0b00010000, 7), 0b00011111], 2);
const M = pad(0, [0b00010001, ...same(0b00011011, 2), 0b00010101, ...same(0b00010001, 4)], 2);
const N = pad(0, [0b00010001, ...same(0b00011001, 2), ...same(0b00010101, 2), ...same(0b00010011, 2), 0b00010001], 2);
const O = pad(0, mirr([0b00001110], same(0b00010001, 6)), 2);
const P = pad(0, [...mirr([0b00011110], same(0b00010001, 3)), ...same(0b00010000, 3)], 2);
const Q = [...mirr([0b00001110], same(0b00010001, 6)), 0b00000010, 0b00000001];
const R = pad(0, [...mirr([0b00011110], same(0b00010001, 3)), 0b00010100, 0b00010010, 0b00010001], 2);
const S = pad(0, mirr([0b00001110, 0b00010001], [0b00010000, 0b00001110, ...same(0b00000001, 2)]), 2);
const T = pad(0, [0b00011111, ...same(0b00000100, 7)], 2);
const V = pad(0, [...same(0b00010001, 4), ...same(0b00001010, 2), ...same(0b00000100, 2)], 2);
const U = pad(0, [...same(0b00010001, 7), 0b00001110], 2);
const W = pad(0, [...same(0b00010001, 2), ...same(0b00010101, 3), ...same(0b00001010, 3)], 2);
const X = pad(0, mirr([...same(0b00010001, 2), 0b00001010, 0b00000100]), 2);
const Y = pad(0, [...same(0b00010001, 2), ...same(0b00001010, 2), ...same(0b00000100, 4)], 2);
const Z = pad(0, [0b00011111, 0b00000001, 0b00000010, ...same(0b00000100, 2), 0b00001000, 0b00010000, 0b00111111], 2);

const _0 = pad(0, mirr([0b00001110, 0b00010001], [0b00010011, 0b00010101, 0b00011001, 0b00010001]), 2);
const _1 = pad(0, [0b00000100, 0b00001100, 0b00010100, ...same(0b00000100, 4), 0b00011111], 2);
const _2 = pad(0, [0b00001110, 0b00010001, 0b00000001, 0b00000010, 0b00000100, 0b00001000, 0b00010000, 0b00011111], 2);
const _3 = pad(0, mirr([0b00001110, 0b00010001, 0b00000001], [0b00000110, 0b00000001]), 2);
const _4 = pad(0, [0b00000010, 0b00000110, 0b00001010, 0b00010010, 0b00011111, ...same(0b00000010, 3)], 2);
const _5 = pad(0, [0b00011111, 0b00010000, 0b00011110, 0b00010001, ...same(0b00000001, 3), 0b0001111], 2);
const _6 = pad(0, [0b00000110, 0b00001000, 0b00010000, 0b00011110, ...same(0b00010001, 3), 0b00001110], 2);
const _7 = pad(0, [0b00011111, 0b00010001, 0b00000001, ...same(0b00000010, 2), ...same(0b00000100, 3)], 2);
const _8 = pad(0, mirr([0b00001110, ...same(0b00010001, 2)], [0b00001110, 0b00010001]), 2);
const _9 = pad(0, [0b00001110, ...same(0b00010001, 3), 0b00001111, 0b00000001, 0b00000010, 0b00001100], 2);

const font = [
	a,
	b,
	c,
	d,
	e,
	f,
	g,
	h,
	i,
	j,
	k,
	l,
	m,
	n,
	o,
	p,
	q,
	r,
	s,
	t,
	u,
	v,
	w,
	x,
	y,
	z,
	A,
	B,
	C,
	D,
	E,
	F,
	G,
	H,
	I,
	J,
	K,
	L,
	M,
	N,
	O,
	P,
	Q,
	R,
	S,
	T,
	U,
	V,
	W,
	X,
	Y,
	Z,
	_0,
	_1,
	_2,
	_3,
	_4,
	_5,
	_6,
	_7,
	_8,
	_9,
].flat();

export default font;
