// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`functional tests if the generated memory map matches with the snapshot 1`] = `
Map {
  "in" => Object {
    "byteAddress": 0,
    "default": 0,
    "id": "in",
    "lineNumber": 2,
    "relativeWordAddress": 0,
    "type": 3,
    "wordSize": 1,
  },
  "out" => Object {
    "byteAddress": 4,
    "default": 0,
    "id": "out",
    "lineNumber": 3,
    "relativeWordAddress": 1,
    "type": 4,
    "wordSize": 1,
  },
  "allocatedNotes" => Object {
    "byteAddress": 8,
    "default": 12,
    "id": "allocatedNotes",
    "lineNumber": 4,
    "relativeWordAddress": 2,
    "type": 5,
    "wordSize": 1,
  },
  "numberOfNotes" => Object {
    "byteAddress": 12,
    "default": 0,
    "id": "numberOfNotes",
    "lineNumber": 5,
    "relativeWordAddress": 3,
    "type": 6,
    "wordSize": 1,
  },
  "notes" => Object {
    "byteAddress": 16,
    "default": Array [
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
    ],
    "id": "notes",
    "lineNumber": 6,
    "relativeWordAddress": 4,
    "type": 0,
    "wordSize": 12,
  },
}
`;

exports[`functional tests if the wat code matches with the snapshot 1`] = `
"(module
  (type (;0;) (func))
  (import \\"js\\" \\"memory\\" (memory (;0;) 1))
  (func (;0;) (type 0)
    (local i32 i32 i32 i32 i32 i32 i32)
    i32.const 0
    i32.load
    i32.load
    local.set 2
    i32.const 12
    i32.load
    i32.const 4
    i32.mul
    i32.const 16
    i32.add
    local.set 6
    i32.const 2147483647
    local.set 5
    i32.const 16
    local.set 3
    block  ;; label = @1
      loop  ;; label = @2
        local.get 3
        local.get 6
        i32.ge_u
        br_if 1 (;@1;)
        local.get 3
        i32.load
        local.set 4
        local.get 4
        local.get 2
        i32.sub
        local.set 1
        local.get 1
        i32.const 0
        i32.lt_s
        if (result i32)  ;; label = @3
          i32.const 0
          local.get 1
          i32.sub
        else
          local.get 1
        end
        local.set 1
        local.get 1
        local.get 5
        i32.le_s
        if  ;; label = @3
          local.get 1
          local.set 5
          local.get 4
          local.set 0
        end
        local.get 3
        i32.const 4
        i32.add
        local.set 3
        br 0 (;@2;)
      end
    end
    i32.const 4
    local.get 0
    i32.store)
  (export \\"test\\" (func 0)))
"
`;
