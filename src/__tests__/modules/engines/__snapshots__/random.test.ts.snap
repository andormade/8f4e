// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`random if the generated memory map matches with the snapshot 1`] = `
Map {
  "seed" => Object {
    "byteAddress": 0,
    "default": 69420,
    "relativeWordAddress": 0,
    "type": 5,
    "wordSize": 1,
  },
  "out" => Object {
    "byteAddress": 4,
    "default": 0,
    "relativeWordAddress": 1,
    "type": 4,
    "wordSize": 1,
  },
}
`;

exports[`random if the wat code matches with the snapshot 1`] = `
"(module
  (type (;0;) (func))
  (import \\"js\\" \\"memory\\" (memory (;0;) 1))
  (func (;0;) (type 0)
    (local i32 i32)
    i32.const 4
    i32.load
    local.set 0
    local.get 0
    i32.eqz
    if (result i32)  ;; label = @1
      i32.const 0
      i32.load
    else
      local.get 0
    end
    local.set 0
    local.get 0
    i32.const 1
    i32.and
    i32.const 0
    i32.shr_s
    local.get 1
    i32.xor
    local.set 1
    local.get 0
    i32.const 4
    i32.and
    i32.const 2
    i32.shr_s
    local.get 1
    i32.xor
    local.set 1
    local.get 0
    i32.const 8
    i32.and
    i32.const 3
    i32.shr_s
    local.get 1
    i32.xor
    local.set 1
    local.get 0
    i32.const 32
    i32.and
    i32.const 5
    i32.shr_s
    local.get 1
    i32.xor
    local.set 1
    local.get 0
    i32.const 1
    i32.shr_u
    local.set 0
    local.get 1
    i32.eqz
    if (result i32)  ;; label = @1
      local.get 0
    else
      local.get 0
      i32.const -2147483648
      i32.or
    end
    local.set 0
    i32.const 4
    local.get 0
    i32.const 32767
    i32.rem_s
    i32.store)
  (export \\"test\\" (func 0)))
"
`;
