// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`stepSequencer if the generated memory map matches with the snapshot 1`] = `
Map {
  "defaultValue" => Object {
    "address": 0,
    "byteAddress": 0,
    "default": 0,
    "size": 1,
    "type": 5,
    "usage": 0,
  },
  "trigger" => Object {
    "address": 1,
    "byteAddress": 4,
    "default": 0,
    "size": 1,
    "type": 3,
    "usage": 2,
  },
  "triggerPreviousValue" => Object {
    "address": 2,
    "byteAddress": 8,
    "default": 0,
    "size": 1,
    "type": 5,
    "usage": 1,
  },
  "steps" => Object {
    "address": 3,
    "byteAddress": 12,
    "default": Array [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
    ],
    "size": 16,
    "type": 0,
    "usage": 0,
  },
  "stepPointer" => Object {
    "address": 19,
    "byteAddress": 76,
    "default": 12,
    "size": 1,
    "type": 5,
    "usage": 1,
  },
  "stepLength" => Object {
    "address": 20,
    "byteAddress": 80,
    "default": 4,
    "size": 1,
    "type": 6,
    "usage": 1,
  },
  "out" => Object {
    "address": 21,
    "byteAddress": 84,
    "default": 0,
    "size": 1,
    "type": 4,
    "usage": 0,
  },
}
`;

exports[`stepSequencer if the wat code matches with the snapshot 1`] = `
"(module
  (type (;0;) (func))
  (import \\"js\\" \\"memory\\" (memory (;0;) 1))
  (func (;0;) (type 0)
    (local i32)
    i32.const 76
    i32.load
    local.set 0
    i32.const 4
    i32.load
    i32.load
    i32.const 8
    i32.load
    i32.gt_s
    if  ;; label = @1
      local.get 0
      i32.const 4
      i32.add
      local.set 0
      local.get 0
      i32.const 80
      i32.load
      i32.const 4
      i32.mul
      i32.const 12
      i32.add
      i32.ge_s
      if  ;; label = @2
        i32.const 12
        local.set 0
      end
    end
    i32.const 76
    local.get 0
    i32.store
    i32.const 84
    local.get 0
    i32.load
    i32.store
    i32.const 8
    i32.const 4
    i32.load
    i32.load
    i32.store)
  (export \\"test\\" (func 0)))
"
`;
