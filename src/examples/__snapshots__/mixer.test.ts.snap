// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`mixer if the generated ast matches with the snapshot 1`] = `
Array [
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "mixer",
      },
    ],
    "instruction": "module",
    "lineNumber": 2,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "defaultValue",
      },
      Object {
        "type": "literal",
        "value": 0,
      },
    ],
    "instruction": "private",
    "lineNumber": 4,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "out",
      },
      Object {
        "type": "literal",
        "value": 0,
      },
    ],
    "instruction": "output",
    "lineNumber": 5,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "in:1",
      },
      Object {
        "type": "identifier",
        "value": "defaultValue",
      },
    ],
    "instruction": "inputPointer",
    "lineNumber": 6,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "in:2",
      },
      Object {
        "type": "identifier",
        "value": "defaultValue",
      },
    ],
    "instruction": "inputPointer",
    "lineNumber": 7,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "in:3",
      },
      Object {
        "type": "identifier",
        "value": "defaultValue",
      },
    ],
    "instruction": "inputPointer",
    "lineNumber": 8,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "in:4",
      },
      Object {
        "type": "identifier",
        "value": "defaultValue",
      },
    ],
    "instruction": "inputPointer",
    "lineNumber": 9,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "HIGH",
      },
      Object {
        "type": "literal",
        "value": 32767,
      },
    ],
    "instruction": "const",
    "lineNumber": 11,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "LOW",
      },
      Object {
        "type": "literal",
        "value": -32768,
      },
    ],
    "instruction": "const",
    "lineNumber": 12,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "result",
      },
    ],
    "instruction": "local",
    "lineNumber": 14,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "&out",
      },
    ],
    "instruction": "push",
    "lineNumber": 16,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "in:1",
      },
    ],
    "instruction": "push",
    "lineNumber": 17,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "in:2",
      },
    ],
    "instruction": "push",
    "lineNumber": 18,
  },
  Object {
    "arguments": Array [],
    "instruction": "add",
    "lineNumber": 19,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "in:3",
      },
    ],
    "instruction": "push",
    "lineNumber": 20,
  },
  Object {
    "arguments": Array [],
    "instruction": "add",
    "lineNumber": 21,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "in:4",
      },
    ],
    "instruction": "push",
    "lineNumber": 22,
  },
  Object {
    "arguments": Array [],
    "instruction": "add",
    "lineNumber": 23,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "result",
      },
    ],
    "instruction": "localSet",
    "lineNumber": 24,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "result",
      },
    ],
    "instruction": "push",
    "lineNumber": 26,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "HIGH",
      },
    ],
    "instruction": "push",
    "lineNumber": 27,
  },
  Object {
    "arguments": Array [],
    "instruction": "greaterOrEqual",
    "lineNumber": 28,
  },
  Object {
    "arguments": Array [],
    "instruction": "if",
    "lineNumber": 29,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "HIGH",
      },
    ],
    "instruction": "push",
    "lineNumber": 30,
  },
  Object {
    "arguments": Array [],
    "instruction": "else",
    "lineNumber": 31,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "result",
      },
    ],
    "instruction": "push",
    "lineNumber": 32,
  },
  Object {
    "arguments": Array [],
    "instruction": "end",
    "lineNumber": 33,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "result",
      },
    ],
    "instruction": "localSet",
    "lineNumber": 34,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "result",
      },
    ],
    "instruction": "push",
    "lineNumber": 36,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "LOW",
      },
    ],
    "instruction": "push",
    "lineNumber": 37,
  },
  Object {
    "arguments": Array [],
    "instruction": "lessOrEqual",
    "lineNumber": 38,
  },
  Object {
    "arguments": Array [],
    "instruction": "if",
    "lineNumber": 39,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "LOW",
      },
    ],
    "instruction": "push",
    "lineNumber": 40,
  },
  Object {
    "arguments": Array [],
    "instruction": "else",
    "lineNumber": 41,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "result",
      },
    ],
    "instruction": "push",
    "lineNumber": 42,
  },
  Object {
    "arguments": Array [],
    "instruction": "end",
    "lineNumber": 43,
  },
  Object {
    "arguments": Array [],
    "instruction": "store",
    "lineNumber": 44,
  },
]
`;

exports[`mixer if the generated memory map matches with the snapshot 1`] = `
Map {
  "defaultValue" => Object {
    "byteAddress": 0,
    "default": 0,
    "id": "defaultValue",
    "lineNumber": 4,
    "relativeWordAddress": 0,
    "type": 5,
    "wordSize": 1,
  },
  "out" => Object {
    "byteAddress": 4,
    "default": 0,
    "id": "out",
    "lineNumber": 5,
    "relativeWordAddress": 1,
    "type": 4,
    "wordSize": 1,
  },
  "in:1" => Object {
    "byteAddress": 8,
    "default": 0,
    "id": "in:1",
    "lineNumber": 6,
    "relativeWordAddress": 2,
    "type": 3,
    "wordSize": 1,
  },
  "in:2" => Object {
    "byteAddress": 12,
    "default": 0,
    "id": "in:2",
    "lineNumber": 7,
    "relativeWordAddress": 3,
    "type": 3,
    "wordSize": 1,
  },
  "in:3" => Object {
    "byteAddress": 16,
    "default": 0,
    "id": "in:3",
    "lineNumber": 8,
    "relativeWordAddress": 4,
    "type": 3,
    "wordSize": 1,
  },
  "in:4" => Object {
    "byteAddress": 20,
    "default": 0,
    "id": "in:4",
    "lineNumber": 9,
    "relativeWordAddress": 5,
    "type": 3,
    "wordSize": 1,
  },
}
`;

exports[`mixer if the wat code matches with the snapshot 1`] = `
"(module
  (type (;0;) (func))
  (import \\"js\\" \\"memory\\" (memory (;0;) 1))
  (func (;0;) (type 0)
    (local i32)
    i32.const 4
    i32.const 8
    i32.load
    i32.load
    i32.const 12
    i32.load
    i32.load
    i32.add
    i32.const 16
    i32.load
    i32.load
    i32.add
    i32.const 20
    i32.load
    i32.load
    i32.add
    local.set 0
    local.get 0
    i32.const 32767
    i32.ge_s
    if (result i32)  ;; label = @1
      i32.const 32767
    else
      local.get 0
    end
    local.set 0
    local.get 0
    i32.const -32768
    i32.le_s
    if (result i32)  ;; label = @1
      i32.const -32768
    else
      local.get 0
    end
    i32.store)
  (export \\"test\\" (func 0)))
"
`;
