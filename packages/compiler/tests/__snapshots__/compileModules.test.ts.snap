// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`compiler compileModules 1`] = `
Array [
  Object {
    "ast": Array [
      Object {
        "arguments": Array [
          Object {
            "type": "identifier",
            "value": "abs",
          },
        ],
        "instruction": "module",
        "lineNumber": 1,
      },
      Object {
        "arguments": Array [
          Object {
            "type": "identifier",
            "value": "DEFAULT_VALUE",
          },
          Object {
            "isInteger": true,
            "type": "literal",
            "value": 0,
          },
        ],
        "instruction": "int",
        "lineNumber": 4,
      },
      Object {
        "arguments": Array [
          Object {
            "type": "identifier",
            "value": "in",
          },
          Object {
            "type": "identifier",
            "value": "&DEFAULT_VALUE",
          },
        ],
        "instruction": "int*",
        "lineNumber": 5,
      },
      Object {
        "arguments": Array [
          Object {
            "type": "identifier",
            "value": "out",
          },
          Object {
            "isInteger": true,
            "type": "literal",
            "value": 0,
          },
        ],
        "instruction": "int",
        "lineNumber": 6,
      },
      Object {
        "arguments": Array [
          Object {
            "type": "identifier",
            "value": "test",
          },
          Object {
            "isInteger": true,
            "type": "literal",
            "value": 1,
          },
        ],
        "instruction": "int",
        "lineNumber": 7,
      },
      Object {
        "arguments": Array [
          Object {
            "type": "identifier",
            "value": "int",
          },
          Object {
            "type": "identifier",
            "value": "input",
          },
        ],
        "instruction": "local",
        "lineNumber": 10,
      },
      Object {
        "arguments": Array [
          Object {
            "type": "identifier",
            "value": "&out",
          },
        ],
        "instruction": "push",
        "lineNumber": 13,
      },
      Object {
        "arguments": Array [
          Object {
            "type": "identifier",
            "value": "in",
          },
        ],
        "instruction": "push",
        "lineNumber": 14,
      },
      Object {
        "arguments": Array [
          Object {
            "type": "identifier",
            "value": "input",
          },
        ],
        "instruction": "localSet",
        "lineNumber": 15,
      },
      Object {
        "arguments": Array [
          Object {
            "type": "identifier",
            "value": "input",
          },
        ],
        "instruction": "push",
        "lineNumber": 16,
      },
      Object {
        "arguments": Array [
          Object {
            "isInteger": true,
            "type": "literal",
            "value": 0,
          },
        ],
        "instruction": "push",
        "lineNumber": 17,
      },
      Object {
        "arguments": Array [],
        "instruction": "lessThan",
        "lineNumber": 18,
      },
      Object {
        "arguments": Array [],
        "instruction": "if",
        "lineNumber": 19,
      },
      Object {
        "arguments": Array [
          Object {
            "isInteger": true,
            "type": "literal",
            "value": 0,
          },
        ],
        "instruction": "push",
        "lineNumber": 20,
      },
      Object {
        "arguments": Array [
          Object {
            "type": "identifier",
            "value": "input",
          },
        ],
        "instruction": "push",
        "lineNumber": 21,
      },
      Object {
        "arguments": Array [],
        "instruction": "sub",
        "lineNumber": 22,
      },
      Object {
        "arguments": Array [],
        "instruction": "else",
        "lineNumber": 23,
      },
      Object {
        "arguments": Array [
          Object {
            "type": "identifier",
            "value": "input",
          },
        ],
        "instruction": "push",
        "lineNumber": 24,
      },
      Object {
        "arguments": Array [],
        "instruction": "ifEnd",
        "lineNumber": 25,
      },
      Object {
        "arguments": Array [],
        "instruction": "store",
        "lineNumber": 26,
      },
      Object {
        "arguments": Array [],
        "instruction": "moduleEnd",
        "lineNumber": 27,
      },
    ],
    "byteAddress": 0,
    "id": "abs",
    "index": 0,
    "initFunctionBody": Array [
      2,
      0,
      11,
    ],
    "loopFunctionBody": Array [
      32,
      1,
      1,
      127,
      65,
      8,
      65,
      4,
      40,
      2,
      0,
      33,
      0,
      32,
      0,
      65,
      0,
      72,
      4,
      127,
      65,
      0,
      32,
      0,
      107,
      5,
      32,
      0,
      11,
      54,
      2,
      0,
      11,
    ],
    "memoryMap": Map {
      "DEFAULT_VALUE" => Object {
        "byteAddress": 0,
        "default": 0,
        "elementWordSize": 4,
        "id": "DEFAULT_VALUE",
        "isInteger": true,
        "isPointer": false,
        "isPointingToInteger": false,
        "isPointingToPointer": false,
        "numberOfElements": 1,
        "type": "int",
        "wordAlignedAddress": 0,
        "wordAlignedSize": 1,
      },
      "in" => Object {
        "byteAddress": 4,
        "default": 0,
        "elementWordSize": 4,
        "id": "in",
        "isInteger": true,
        "isPointer": true,
        "isPointingToInteger": true,
        "isPointingToPointer": false,
        "numberOfElements": 1,
        "type": "int*",
        "wordAlignedAddress": 1,
        "wordAlignedSize": 1,
      },
      "out" => Object {
        "byteAddress": 8,
        "default": 0,
        "elementWordSize": 4,
        "id": "out",
        "isInteger": true,
        "isPointer": false,
        "isPointingToInteger": false,
        "isPointingToPointer": false,
        "numberOfElements": 1,
        "type": "int",
        "wordAlignedAddress": 2,
        "wordAlignedSize": 1,
      },
      "test" => Object {
        "byteAddress": 12,
        "default": 1,
        "elementWordSize": 4,
        "id": "test",
        "isInteger": true,
        "isPointer": false,
        "isPointingToInteger": false,
        "isPointingToPointer": false,
        "numberOfElements": 1,
        "type": "int",
        "wordAlignedAddress": 3,
        "wordAlignedSize": 1,
      },
    },
    "wordAlignedAddress": 0,
    "wordAlignedSize": 4,
  },
]
`;
