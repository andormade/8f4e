// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`logicAnd if the generated ast matches with the snapshot 1`] = `
Array [
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "logicAnd",
      },
    ],
    "instruction": "module",
    "lineNumber": 1,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "defaultValue",
      },
      Object {
        "type": "literal",
        "value": 0,
      },
    ],
    "instruction": "private",
    "lineNumber": 3,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "in:1",
      },
      Object {
        "type": "identifier",
        "value": "&defaultValue",
      },
    ],
    "instruction": "inputPointer",
    "lineNumber": 4,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "in:2",
      },
      Object {
        "type": "identifier",
        "value": "&defaultValue",
      },
    ],
    "instruction": "inputPointer",
    "lineNumber": 5,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "out",
      },
      Object {
        "type": "literal",
        "value": 0,
      },
    ],
    "instruction": "output",
    "lineNumber": 6,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "*in:1",
      },
    ],
    "instruction": "push",
    "lineNumber": 8,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "literal",
        "value": 0,
      },
    ],
    "instruction": "push",
    "lineNumber": 9,
  },
  Object {
    "arguments": Array [],
    "instruction": "greaterThan",
    "lineNumber": 10,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "void",
      },
    ],
    "instruction": "if",
    "lineNumber": 11,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "*in:2",
      },
    ],
    "instruction": "push",
    "lineNumber": 12,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "literal",
        "value": 0,
      },
    ],
    "instruction": "push",
    "lineNumber": 13,
  },
  Object {
    "arguments": Array [],
    "instruction": "greaterThan",
    "lineNumber": 14,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "void",
      },
    ],
    "instruction": "if",
    "lineNumber": 15,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "&out",
      },
    ],
    "instruction": "push",
    "lineNumber": 16,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "literal",
        "value": 32767,
      },
    ],
    "instruction": "push",
    "lineNumber": 17,
  },
  Object {
    "arguments": Array [],
    "instruction": "store",
    "lineNumber": 18,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "literal",
        "value": 2,
      },
    ],
    "instruction": "branch",
    "lineNumber": 19,
  },
  Object {
    "arguments": Array [],
    "instruction": "end",
    "lineNumber": 20,
  },
  Object {
    "arguments": Array [],
    "instruction": "end",
    "lineNumber": 21,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "&out",
      },
    ],
    "instruction": "push",
    "lineNumber": 23,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "literal",
        "value": 0,
      },
    ],
    "instruction": "push",
    "lineNumber": 24,
  },
  Object {
    "arguments": Array [],
    "instruction": "store",
    "lineNumber": 25,
  },
]
`;

exports[`logicAnd if the generated memory map matches with the snapshot 1`] = `
Map {
  "defaultValue" => Object {
    "byteAddress": 0,
    "default": 0,
    "id": "defaultValue",
    "lineNumber": 3,
    "relativeWordAddress": 0,
    "type": 5,
    "wordSize": 1,
  },
  "in:1" => Object {
    "byteAddress": 4,
    "default": 0,
    "id": "in:1",
    "lineNumber": 4,
    "relativeWordAddress": 1,
    "type": 3,
    "wordSize": 1,
  },
  "in:2" => Object {
    "byteAddress": 8,
    "default": 0,
    "id": "in:2",
    "lineNumber": 5,
    "relativeWordAddress": 2,
    "type": 3,
    "wordSize": 1,
  },
  "out" => Object {
    "byteAddress": 12,
    "default": 0,
    "id": "out",
    "lineNumber": 6,
    "relativeWordAddress": 3,
    "type": 4,
    "wordSize": 1,
  },
}
`;

exports[`logicAnd if the wat code matches with the snapshot 1`] = `
"(module
  (type (;0;) (func))
  (import \\"js\\" \\"memory\\" (memory (;0;) 1))
  (func (;0;) (type 0)
    i32.const 4
    i32.load
    i32.load
    i32.const 0
    i32.gt_s
    if  ;; label = @1
      i32.const 8
      i32.load
      i32.load
      i32.const 0
      i32.gt_s
      if  ;; label = @2
        i32.const 12
        i32.const 32767
        i32.store
        br 2 (;@0;)
      end
    end
    i32.const 12
    i32.const 0
    i32.store)
  (export \\"test\\" (func 0)))
"
`;
