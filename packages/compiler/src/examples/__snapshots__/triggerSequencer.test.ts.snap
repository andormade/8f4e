// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`triggerSequencer if the generated ast matches with the snapshot 1`] = `
Array [
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "triggerSequencer",
      },
    ],
    "instruction": "module",
    "lineNumber": 1,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "defaultValue",
      },
      Object {
        "type": "literal",
        "value": 0,
      },
    ],
    "instruction": "private",
    "lineNumber": 3,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "trigger",
      },
      Object {
        "type": "identifier",
        "value": "defaultValue",
      },
    ],
    "instruction": "inputPointer",
    "lineNumber": 4,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "reset",
      },
      Object {
        "type": "identifier",
        "value": "defaultValue",
      },
    ],
    "instruction": "inputPointer",
    "lineNumber": 5,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "triggerPreviousValue",
      },
      Object {
        "type": "literal",
        "value": 0,
      },
    ],
    "instruction": "private",
    "lineNumber": 6,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "stepMinusOne",
      },
      Object {
        "type": "literal",
        "value": 0,
      },
    ],
    "instruction": "private",
    "lineNumber": 7,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "steps",
      },
      Object {
        "type": "literal",
        "value": 16,
      },
      Object {
        "type": "literal",
        "value": 0,
      },
    ],
    "instruction": "array",
    "lineNumber": 8,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "stepPointer",
      },
      Object {
        "type": "identifier",
        "value": "stepMinusOne",
      },
    ],
    "instruction": "private",
    "lineNumber": 9,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "stepLength",
      },
      Object {
        "type": "literal",
        "value": 4,
      },
    ],
    "instruction": "public",
    "lineNumber": 10,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "didTrigger",
      },
      Object {
        "type": "literal",
        "value": 0,
      },
    ],
    "instruction": "private",
    "lineNumber": 11,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "out",
      },
      Object {
        "type": "literal",
        "value": 0,
      },
    ],
    "instruction": "output",
    "lineNumber": 12,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "_stepPointer",
      },
    ],
    "instruction": "local",
    "lineNumber": 14,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "stepPointer",
      },
    ],
    "instruction": "push",
    "lineNumber": 16,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "_stepPointer",
      },
    ],
    "instruction": "localSet",
    "lineNumber": 17,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "reset",
      },
    ],
    "instruction": "push",
    "lineNumber": 19,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "literal",
        "value": 0,
      },
    ],
    "instruction": "push",
    "lineNumber": 20,
  },
  Object {
    "arguments": Array [],
    "instruction": "greaterThan",
    "lineNumber": 21,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "void",
      },
    ],
    "instruction": "if",
    "lineNumber": 22,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "&stepMinusOne",
      },
    ],
    "instruction": "push",
    "lineNumber": 23,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "_stepPointer",
      },
    ],
    "instruction": "localSet",
    "lineNumber": 24,
  },
  Object {
    "arguments": Array [],
    "instruction": "end",
    "lineNumber": 25,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "trigger",
      },
    ],
    "instruction": "push",
    "lineNumber": 27,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "triggerPreviousValue",
      },
    ],
    "instruction": "push",
    "lineNumber": 28,
  },
  Object {
    "arguments": Array [],
    "instruction": "greaterThan",
    "lineNumber": 29,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "void",
      },
    ],
    "instruction": "if",
    "lineNumber": 30,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "&didTrigger",
      },
    ],
    "instruction": "push",
    "lineNumber": 31,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "literal",
        "value": 0,
      },
    ],
    "instruction": "push",
    "lineNumber": 32,
  },
  Object {
    "arguments": Array [],
    "instruction": "store",
    "lineNumber": 33,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "_stepPointer",
      },
    ],
    "instruction": "push",
    "lineNumber": 35,
  },
  Object {
    "arguments": Array [],
    "instruction": "pointerForward",
    "lineNumber": 36,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "_stepPointer",
      },
    ],
    "instruction": "localSet",
    "lineNumber": 37,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "_stepPointer",
      },
    ],
    "instruction": "push",
    "lineNumber": 39,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "stepLength",
      },
    ],
    "instruction": "push",
    "lineNumber": 40,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "literal",
        "value": 4,
      },
    ],
    "instruction": "push",
    "lineNumber": 41,
  },
  Object {
    "arguments": Array [],
    "instruction": "mul",
    "lineNumber": 42,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "&steps",
      },
    ],
    "instruction": "push",
    "lineNumber": 43,
  },
  Object {
    "arguments": Array [],
    "instruction": "add",
    "lineNumber": 44,
  },
  Object {
    "arguments": Array [],
    "instruction": "greaterOrEqual",
    "lineNumber": 45,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "void",
      },
    ],
    "instruction": "if",
    "lineNumber": 46,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "&steps",
      },
    ],
    "instruction": "push",
    "lineNumber": 47,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "_stepPointer",
      },
    ],
    "instruction": "localSet",
    "lineNumber": 48,
  },
  Object {
    "arguments": Array [],
    "instruction": "end",
    "lineNumber": 49,
  },
  Object {
    "arguments": Array [],
    "instruction": "end",
    "lineNumber": 50,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "&stepPointer",
      },
    ],
    "instruction": "push",
    "lineNumber": 51,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "_stepPointer",
      },
    ],
    "instruction": "push",
    "lineNumber": 52,
  },
  Object {
    "arguments": Array [],
    "instruction": "store",
    "lineNumber": 53,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "&out",
      },
    ],
    "instruction": "push",
    "lineNumber": 55,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "_stepPointer",
      },
    ],
    "instruction": "push",
    "lineNumber": 56,
  },
  Object {
    "arguments": Array [],
    "instruction": "load",
    "lineNumber": 57,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "literal",
        "value": 0,
      },
    ],
    "instruction": "push",
    "lineNumber": 58,
  },
  Object {
    "arguments": Array [],
    "instruction": "greaterThan",
    "lineNumber": 59,
  },
  Object {
    "arguments": Array [],
    "instruction": "if",
    "lineNumber": 60,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "didTrigger",
      },
    ],
    "instruction": "push",
    "lineNumber": 61,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "literal",
        "value": 0,
      },
    ],
    "instruction": "push",
    "lineNumber": 62,
  },
  Object {
    "arguments": Array [],
    "instruction": "greaterThan",
    "lineNumber": 63,
  },
  Object {
    "arguments": Array [],
    "instruction": "if",
    "lineNumber": 64,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "literal",
        "value": 0,
      },
    ],
    "instruction": "push",
    "lineNumber": 65,
  },
  Object {
    "arguments": Array [],
    "instruction": "else",
    "lineNumber": 66,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "&didTrigger",
      },
    ],
    "instruction": "push",
    "lineNumber": 67,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "literal",
        "value": 1,
      },
    ],
    "instruction": "push",
    "lineNumber": 68,
  },
  Object {
    "arguments": Array [],
    "instruction": "store",
    "lineNumber": 69,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "literal",
        "value": 32767,
      },
    ],
    "instruction": "push",
    "lineNumber": 71,
  },
  Object {
    "arguments": Array [],
    "instruction": "end",
    "lineNumber": 72,
  },
  Object {
    "arguments": Array [],
    "instruction": "else",
    "lineNumber": 73,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "literal",
        "value": 0,
      },
    ],
    "instruction": "push",
    "lineNumber": 74,
  },
  Object {
    "arguments": Array [],
    "instruction": "end",
    "lineNumber": 75,
  },
  Object {
    "arguments": Array [],
    "instruction": "store",
    "lineNumber": 76,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "&triggerPreviousValue",
      },
    ],
    "instruction": "push",
    "lineNumber": 78,
  },
  Object {
    "arguments": Array [
      Object {
        "type": "identifier",
        "value": "trigger",
      },
    ],
    "instruction": "push",
    "lineNumber": 79,
  },
  Object {
    "arguments": Array [],
    "instruction": "store",
    "lineNumber": 80,
  },
]
`;

exports[`triggerSequencer if the generated memory map matches with the snapshot 1`] = `
Map {
  "defaultValue" => Object {
    "byteAddress": 0,
    "default": 0,
    "id": "defaultValue",
    "lineNumber": 3,
    "relativeWordAddress": 0,
    "type": 5,
    "wordSize": 1,
  },
  "trigger" => Object {
    "byteAddress": 4,
    "default": 0,
    "id": "trigger",
    "lineNumber": 4,
    "relativeWordAddress": 1,
    "type": 3,
    "wordSize": 1,
  },
  "reset" => Object {
    "byteAddress": 8,
    "default": 0,
    "id": "reset",
    "lineNumber": 5,
    "relativeWordAddress": 2,
    "type": 3,
    "wordSize": 1,
  },
  "triggerPreviousValue" => Object {
    "byteAddress": 12,
    "default": 0,
    "id": "triggerPreviousValue",
    "lineNumber": 6,
    "relativeWordAddress": 3,
    "type": 5,
    "wordSize": 1,
  },
  "stepMinusOne" => Object {
    "byteAddress": 16,
    "default": 0,
    "id": "stepMinusOne",
    "lineNumber": 7,
    "relativeWordAddress": 4,
    "type": 5,
    "wordSize": 1,
  },
  "steps" => Object {
    "byteAddress": 20,
    "default": Array [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
    ],
    "id": "steps",
    "lineNumber": 8,
    "relativeWordAddress": 5,
    "type": 0,
    "wordSize": 16,
  },
  "stepPointer" => Object {
    "byteAddress": 84,
    "default": 16,
    "id": "stepPointer",
    "lineNumber": 9,
    "relativeWordAddress": 21,
    "type": 5,
    "wordSize": 1,
  },
  "stepLength" => Object {
    "byteAddress": 88,
    "default": 4,
    "id": "stepLength",
    "lineNumber": 10,
    "relativeWordAddress": 22,
    "type": 6,
    "wordSize": 1,
  },
  "didTrigger" => Object {
    "byteAddress": 92,
    "default": 0,
    "id": "didTrigger",
    "lineNumber": 11,
    "relativeWordAddress": 23,
    "type": 5,
    "wordSize": 1,
  },
  "out" => Object {
    "byteAddress": 96,
    "default": 0,
    "id": "out",
    "lineNumber": 12,
    "relativeWordAddress": 24,
    "type": 4,
    "wordSize": 1,
  },
}
`;

exports[`triggerSequencer if the wat code matches with the snapshot 1`] = `
"(module
  (type (;0;) (func))
  (import \\"js\\" \\"memory\\" (memory (;0;) 1))
  (func (;0;) (type 0)
    (local i32)
    i32.const 84
    i32.load
    local.set 0
    i32.const 8
    i32.load
    i32.load
    i32.const 0
    i32.gt_s
    if  ;; label = @1
      i32.const 16
      local.set 0
    end
    i32.const 4
    i32.load
    i32.load
    i32.const 12
    i32.load
    i32.gt_s
    if  ;; label = @1
      i32.const 92
      i32.const 0
      i32.store
      local.get 0
      i32.const 4
      i32.add
      local.set 0
      local.get 0
      i32.const 88
      i32.load
      i32.const 4
      i32.mul
      i32.const 20
      i32.add
      i32.ge_s
      if  ;; label = @2
        i32.const 20
        local.set 0
      end
    end
    i32.const 84
    local.get 0
    i32.store
    i32.const 96
    local.get 0
    i32.load
    i32.const 0
    i32.gt_s
    if (result i32)  ;; label = @1
      i32.const 92
      i32.load
      i32.const 0
      i32.gt_s
      if (result i32)  ;; label = @2
        i32.const 0
      else
        i32.const 92
        i32.const 1
        i32.store
        i32.const 32767
      end
    else
      i32.const 0
    end
    i32.store
    i32.const 12
    i32.const 4
    i32.load
    i32.load
    i32.store)
  (export \\"test\\" (func 0)))
"
`;
